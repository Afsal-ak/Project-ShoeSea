<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
        .form-container { margin-top: 20px; }
        .error-message { color: red; }
        .thumbnails-container { display: flex; overflow-x: auto; }
        .thumbnail { margin-right: 10px; }
        .image-input-container { display: flex; flex-direction: column; margin-bottom: 20px; }
        .image-preview { max-width: 300px; max-height: 200px; margin-top: 10px; }
        .crop-container { display: none; margin-top: 10px; }
    </style>
</head>
<body>
    <%- include('../../partials/admin/header') %>

    <div class="container form-container">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <% if (errorMessage) { %>
                <h6 style="color: red;"><%= errorMessage %></h6>
            <% } %>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form id="productForm" method="post" action="/admin/add-products" enctype="multipart/form-data" onsubmit="return validateForm()">
                            <!-- Product Name -->
                            <div class="mb-4">
                                <label for="title" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName" class="form-control border" id="title" required>
                                <div id="productName-error" class="error-message"></div>
                            </div>
    
                            <!-- Description -->
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="description" name="description" class="form-control border" rows="4" required></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <!-- Brand -->
                            <div class="mb-4">
                                <label for="brand" class="form-label">Brand</label>
                                <input type="text" placeholder="Brand Name" name="brand" class="form-control border" id="brand" required>
                                <div id="brand-error" class="error-message"></div>
                            </div>
        <!-- brand -->
        <div class="card mb-4">
            <div class="card-body">
                <div class="row gx-2">
                    <div class="col-sm-6 mb-3">
                        <label class="form-label">Brand</label>
                        <select class="form-select border" style="width: 150px;" name="brandId" required>
                            <% for(let i = 0; i < brand.length; i++) { %>
                                <option value="<%= brand[i]._id %>"><%= brand[i].brandName %></option>
                            <% } %>
                        </select>
                        <div id="brand-error" class="error-message"></div>
                    </div>
                </div>
            </div>
        </div>

                            <!-- Prices and Quantity -->
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="$" name="regularPrice" type="number" class="form-control border" required>
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
    
                            <!-- Color -->
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Color</label>
                                        <input name="color" type="text" class="form-control border" required>
                                        <div id="color-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
    
                            <!-- Category -->
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="categoryId" required>
                                                <% for(let i = 0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i]._id %>"><%= cat[i].categoryName %></option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
    
                            <!-- Discount Type -->
                            <div class="mb-4">
                                <label class="form-label">Discount Type</label>
                                <select class="form-select border" name="discountType">
                                    <option value="">Select discount type</option>
                                    <option value="percentage">Percentage</option>
                                    <option value="flat">Flat</option>
                                </select>
                                <div id="discountType-error" class="error-message"></div>
                            </div>

                            <!-- Discount Value -->
                            <div class="mb-4">
                                <label class="form-label">Discount Value</label>
                                <input placeholder="Discount Value" name="productOffer" type="number" class="form-control border">
                                <div id="discountValue-error" class="error-message"></div>
                            </div>
    
                            <!-- Tax Type -->
                            <div class="mb-4">
                                <label class="form-label">Tax Type</label>
                                <select class="form-select border" name="taxType">
                                    <option value="">Select tax type</option>
                                    <option value="percentage">Percentage</option>
                                    <option value="flat">Flat</option>
                                </select>
                                <div id="taxType-error" class="error-message"></div>
                            </div>
    
                            <!-- Tax Value -->
                            <div class="mb-4">
                                <label class="form-label">Tax Value</label>
                                <input placeholder="Tax Value" name="taxValue" type="number" class="form-control border">
                                <div id="taxValue-error" class="error-message"></div>
                            </div>
    
                            <!-- Offer Description -->
                            <div class="mb-4">
                                <label class="form-label">Offer Description</label>
                                <textarea placeholder="Offer Description" name="offerDescription" class="form-control border" rows="2"></textarea>
                                <div id="offerDescription-error" class="error-message"></div>
                            </div>
                           
                            <!-- Sizes and Stock -->
                            <div id="sizes-container">
                                <h4>Sizes and Stock</h4>
                                <div class="size-entry">
                                    <input type="number" name="sizes[0][size]" placeholder="Size" required>
                                    <input type="number" name="sizes[0][quantity]" placeholder="Quantity" required>
                                </div>
                                <div id="sizes-error" class="error-message"></div>
                            </div>
                            <button type="button" onclick="addSizeEntry()" class="btn btn-secondary mt-2">Add Size</button>
                       
                            <!-- Image Upload -->
                            <div class="card mb-4 mt-4">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="card-body">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                    <% for(let i = 1; i <= 4; i++) { %>
                                        <div class="image-input-container">
                                            <input class="form-control" type="file" name="images" id="input<%= i %>" accept="image/*" onchange="handleImageSelect(event, <%= i %>)">
                                            <img src="" alt="" id="imgView<%= i %>" class="image-preview" style="display: block;">
                                            <div class="crop-container" id="cropContainer<%= i %>" style="display:none;">
                                                <img src="" id="croppedImg<%= i %>" alt="Cropped Image" style="display:none;">
                                                <button type="button" id="saveButton<%= i %>" class="btn btn-primary mt-2">Save Cropped Image</button>
                                            </div>
                                            <img src="" alt="Cropped Image Preview" id="croppedImg<%= i %>" style="display:none; max-width: 200px;">
                                        </div>
                                    <% } %>
                                    <div id="images-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            <div>
                                <button class="btn btn-primary" type="submit">Publish</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    
    <script>
        let sizeCount = 1;
        let croppers = [];

        function handleImageSelect(event, index) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imgView = document.getElementById(`imgView${index}`);
                    imgView.src = e.target.result;

                    if (croppers[index]) {
                        croppers[index].destroy();
                    }

                    croppers[index] = new Cropper(imgView, {
                        aspectRatio: 1,
                        viewMode: 1,
                        guides: true,
                        background: false,
                        autoCropArea: 1,
                        zoomable: true
                    });

                    const cropContainer = document.getElementById(`cropContainer${index}`);
                    cropContainer.style.display = 'block';

                    const saveButton = document.getElementById(`saveButton${index}`);
                    saveButton.onclick = function () {
                        const croppedCanvas = croppers[index].getCroppedCanvas();
                        const croppedImage = document.getElementById(`croppedImg${index}`);
                        croppedImage.src = croppedCanvas.toDataURL('image/jpeg');

                        imgView.style.display = 'none';
                        croppedImage.style.display = 'block';

                        croppedCanvas.toBlob((blob) => {
                            const input = document.getElementById(`input${index}`);
                            const fileName = `cropped-img-${new Date().getTime()}-${index}.png`;
                            const file = new File([blob], fileName, { type: 'image/png' });

                            const dataTransfer = new DataTransfer();
                            dataTransfer.items.add(file);
                            input.files = dataTransfer.files;
                        });

                        croppers[index].destroy();
                        croppers[index] = null;
                    };
                };
                reader.readAsDataURL(file);
            }
        }

        function addSizeEntry() {
            const sizesContainer = document.getElementById('sizes-container');
            const index = sizesContainer.getElementsByClassName('size-entry').length;

            const newSizeEntry = document.createElement('div');
            newSizeEntry.classList.add('size-entry');
            newSizeEntry.innerHTML = `
                <input type="number" name="sizes[${index}][size]" placeholder="Size" min="0" required>
                <input type="number" name="sizes[${index}][quantity]" placeholder="Quantity" min="0" required>
            `;

            sizesContainer.appendChild(newSizeEntry);
        }

        function validateForm() {
            let isValid = true;
            const errorMessages = {};

            // Product Name validation
            const productName = document.getElementById('title').value.trim();
            if (productName === '') {
                errorMessages.productName = 'Product name is required';
                isValid = false;
            }

            // Description validation
            const description = document.getElementById('description').value.trim();
            if (description === '') {
                errorMessages.description = 'Description is required';
                isValid = false;
            }

            // Brand validation
            const brand = document.getElementById('brand').value.trim();
            if (brand === '') {
                errorMessages.brand = 'Brand is required';
                isValid = false;
            }

            // Regular Price validation
            const regularPrice = document.getElementsByName('regularPrice')[0].value;
            if (regularPrice === '' || isNaN(regularPrice) || parseFloat(regularPrice) < 0) {
                errorMessages.regularPrice = 'Regular price must be a non-negative number';
                isValid = false;
            }

            // Color validation
            const color = document.getElementsByName('color')[0].value.trim();
            if (color === '') {
                errorMessages.color = 'Color is required';
                isValid = false;
            }

            // Category validation
            const category = document.getElementsByName('categoryId')[0].value;
            if (category === '') {
                errorMessages.category = 'Please select a category';
                isValid = false;
            }

            // Discount validation
            const discountType = document.getElementsByName('discountType')[0].value;
            const discountValue = document.getElementsByName('productOffer')[0].value;
            if (discountType !== '' && (discountValue === '' || isNaN(discountValue) || parseFloat(discountValue) < 0)) {
                errorMessages.discountValue = 'Discount value must be a non-negative number';
                isValid = false;
            }

            // Tax validation
            const taxType = document.getElementsByName('taxType')[0].value;
            const taxValue = document.getElementsByName('taxValue')[0].value;
            if (taxType !== '' && (taxValue === '' || isNaN(taxValue) || parseFloat(taxValue) < 0)) {
                errorMessages.taxValue = 'Tax value must be a non-negative number';
                isValid = false;
            }

            // Sizes and Stock validation
            const sizeEntries = document.getElementsByClassName('size-entry');
            let sizeError = false;
            for (let i = 0; i < sizeEntries.length; i++) {
                const size = sizeEntries[i].querySelector('input[name^="sizes"][name$="[size]"]').value;
                const quantity = sizeEntries[i].querySelector('input[name^="sizes"][name$="[quantity]"]').value;
                if (size === '' || isNaN(size) || parseInt(size) < 0 || quantity === '' || isNaN(quantity) || parseInt(quantity) < 0) {
                    sizeError = true
                    break;
                }
            }
            if (sizeError) {
                errorMessages.sizes = 'All sizes and stock quantities must be valid non-negative numbers';
                isValid = false;
            }

            // Image validation
            const imageInputs = document.querySelectorAll('input[type="file"]');
            let hasImage = false;
            for (let i = 0; i < imageInputs.length; i++) {
                if (imageInputs[i].files.length > 0) {
                    hasImage = true;
                    break;
                }
            }
            if (!hasImage) {
                errorMessages.images = 'At least one image must be uploaded';
                isValid = false;
            }

            // Display error messages
            document.querySelectorAll('.error-message').forEach(errorDiv => {
                errorDiv.innerHTML = '';  // Clear existing errors
            });
            for (const [key, value] of Object.entries(errorMessages)) {
                document.getElementById(`${key}-error`).innerHTML = value;
            }

            return isValid;
        }
    </script>
</body>
</html>