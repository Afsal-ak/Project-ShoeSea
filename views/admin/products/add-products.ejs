<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
        .form-container {
            max-width: 900px;
            margin: 0 auto;
        }
        .form-wrapper {
            background-color: #ffffff; /* White background */
            padding: 20px; /* Padding around the form */
            border-radius: 8px; /* Rounded corners */
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Subtle shadow */
            margin-top: 20px; /* Margin from the top */
            margin-bottom: 20px; /* Margin from the bottom */
        }
        .img-preview {
            margin: 10px 0;
        }
        .img-preview img {
            max-width: 100px;
            max-height: 100px;
            margin-right: 10px;
        }
        .crop-button {
            margin-top: 10px;
        }
        .crop-container {
            margin-bottom: 20px;
        }
        .crop-container img {
            max-width: 100%;
        }
        .is-invalid {
            border-color: #dc3545;
        }
        .invalid-feedback {
            display: block;
        }
    </style>
</head>
<body>
    <%- include('../../partials/admin/header') %>
    
    <div class="container form-container">
        <div class="form-wrapper">
            <h2 class="my-4">Add Product</h2>
            <form id="productForm" enctype="multipart/form-data" method="post" action="/admin/add-products">
                <!-- Product Name -->
                <div class="form-group">
                    <label for="title">Product Name</label>
                    <input type="text" class="form-control" id="title" name="title" required>
                    <div class="invalid-feedback">Product Name is required and cannot be empty.</div>
                </div>

                <!-- Description -->
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                    <div class="invalid-feedback">Description is required and cannot be empty.</div>
                </div>

                <!-- Brand -->
                <div class="form-group">
                    <label for="brand">Brand</label>
                    <input type="text" class="form-control" id="brand" name="brand">
                    <div class="invalid-feedback">Brand cannot be empty if provided.</div>
                </div>

                <!-- Category -->
                <div class="form-group">
                    <label for="category">Category</label>
                    <select class="form-control" id="category" name="categoryId" required>
                        <% category.forEach(c => { %>
                            <option value="<%= c._id %>"><%= c.categoryName %></option>
                        <% }) %>
                    </select>
                    <div class="invalid-feedback">Category is required.</div>
                </div>

                <!-- Regular Price -->
                <div class="form-group">
                    <label for="regularPrice">Regular Price</label>
                    <input type="number" class="form-control" id="regularPrice" name="regularPrice" step="0.01" required>
                    <div class="invalid-feedback">Regular Price is required and must be a valid number.</div>
                </div>

                <!-- Sale Price -->
                <!-- <div class="form-group">
                    <label for="salePrice">Sale Price</label>
                    <input type="number" class="form-control" id="salePrice" name="salePrice" step="0.01" required>
                    <div class="invalid-feedback">Sale Price is required and must be a valid number.</div>
                </div> -->

                <!-- Discount -->
                <div class="form-group">
                    <label for="discountType">Discount Type</label>
                    <select class="form-control" id="discountType" name="discountType" required>
                        <option value="percentage">Percentage</option>
                        <option value="flat">Flat</option>
                    </select>
                    <div class="invalid-feedback">Discount Type is required.</div>
                </div>
                <div class="form-group">
                    <label for="discountValue">Discount Value</label>
                    <input type="number" class="form-control" id="discountValue" name="discountValue" step="0.01" required>
                    <div class="invalid-feedback">Discount Value is required and must be a valid number.</div>
                </div>

                <!-- Tax -->
                <div class="form-group">
                    <label for="taxType">Tax Type</label>
                    <select class="form-control" id="taxType" name="taxType" required>
                        <option value="percentage">Percentage</option>
                        <option value="flat">Flat</option>
                    </select>
                    <div class="invalid-feedback">Tax Type is required.</div>
                </div>
                <div class="form-group">
                    <label for="taxValue">Tax Value</label>
                    <input type="number" class="form-control" id="taxValue" name="taxValue" step="0.01" required>
                    <div class="invalid-feedback">Tax Value is required and must be a valid number.</div>
                </div>

                <!-- Quantity -->
                <div class="form-group">
                    <label for="quantity">Quantity</label>
                    <input type="number" class="form-control" id="quantity" name="quantity" required>
                    <div class="invalid-feedback">Quantity is required and must be a valid number.</div>
                </div>

                <!-- Color -->
                <div class="form-group">
                    <label for="color">Color</label>
                    <input type="text" class="form-control" id="color" name="color" required>
                    <div class="invalid-feedback">Color is required and cannot be empty.</div>
                </div>

                <!-- Sizes -->
                <div class="form-group">
                    <label for="sizes">Sizes</label>
                    <select class="form-control" id="sizes" name="sizes" multiple required>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                    </select>
                    <div class="invalid-feedback">At least one size must be selected.</div>
                </div>

                <!-- Product Images -->
                <div class="form-group">
                    <label for="images">Product Images</label>
                    <input type="file" class="form-control-file" id="images" name="images" accept="image/*" multiple>
                    <div id="imagePreview" class="img-preview"></div>
                </div>

                <!-- Status -->
                <div class="form-group">
                    <label for="status">Status</label>
                    <select class="form-control" id="status" name="status" required>
                        <option value="Available">Available</option>
                        <option value="Out of Stock">Out of Stock</option>
                        <option value="Discontinued">Discontinued</option>
                    </select>
                    <div class="invalid-feedback">Status is required.</div>
                </div>

                <button type="submit" class="btn btn-primary">Add Product</button>
            </form>
        </div>
    </div>

    <!-- Include necessary scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script>
        $(document).ready(function() {
            const $imagePreview = $('#imagePreview');
            const cropperInstances = [];
            let currentCropperIndex = null;

            $('#images').on('change', function(event) {
                const files = event.target.files;
                $imagePreview.empty();
                cropperInstances.length = 0;

                Array.from(files).forEach((file, index) => {
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            const imgContainer = $(`
                                <div class="crop-container" id="cropContainer${index}">
                                    <img src="${e.target.result}" class="img-fluid">
                                    <button type="button" class="btn btn-secondary crop-button" data-index="${index}">Crop Image</button>
                                </div>
                            `);
                            $imagePreview.append(imgContainer);

                            const imgElement = imgContainer.find('img')[0];
                            const cropper = new Cropper(imgElement, {
                                aspectRatio: 1,
                                viewMode: 1,
                                crop(event) {
                                    // Optional: Crop event handler
                                }
                            });

                            cropperInstances.push(cropper);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            });

            $(document).on('click', '.crop-button', function() {
                const index = $(this).data('index');
                currentCropperIndex = index;
                const cropper = cropperInstances[index];
                if (cropper) {
                    const croppedCanvas = cropper.getCroppedCanvas();
                    const croppedImage = croppedCanvas.toDataURL('image/jpeg');

                    // Remove any previous cropped images for this index
                    $(`#cropContainer${index}`).find('img.cropped').remove();

                    // Create and append cropped image
                    const croppedImgElement = $('<img>')
                        .attr('src', croppedImage)
                        .addClass('img-fluid cropped');
                    
                    $(`#cropContainer${index}`).append(croppedImgElement);
                }
            });

            // Form Validation
            $('#productForm').on('submit', function(event) {
                let isValid = true;
                const inputs = this.querySelectorAll('input, textarea, select');
                
                inputs.forEach(input => {
                    // Remove previous invalid class
                    input.classList.remove('is-invalid');
                    
                    // Check for empty values or invalid inputs
                    if (input.required) {
                        if (input.type === 'text' || input.type === 'textarea') {
                            if (input.value.trim() === '') {
                                input.classList.add('is-invalid');
                                isValid = false;
                            }
                        } else if (input.type === 'number') {
                            if (isNaN(input.value) || input.value.trim() === '') {
                                input.classList.add('is-invalid');
                                isValid = false;
                            }
                        } else if (input.tagName === 'SELECT') {
                            if (input.value === '') {
                                input.classList.add('is-invalid');
                                isValid = false;
                            }
                            // Check if multiple select has at least one option selected
                            if (input.multiple) {
                                if (input.selectedOptions.length === 0) {
                                    input.classList.add('is-invalid');
                                    isValid = false;
                                }
                            }
                        }
                    }
                });

                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
</body>
</html>
