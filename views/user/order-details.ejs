<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details | Shoesea</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <style>
        .breadcrumb-container {
            margin-top: 20px;
        }

        .order-details-container {
            margin-top: 20px;
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .order-details-header {
            background-color: #fff;
            padding: 10px 20px;
            border-bottom: 1px solid #dee2e6;
            border-radius: 5px 5px 0 0;
            position: relative;
        }

        .order-details-header img {
            max-width: 100px;
            position: absolute;
            top: 10px;
            right: 20px;
        }

        .order-details-body {
            background-color: #fff;
            padding: 20px;
            border-radius: 0 0 5px 5px;
        }

        .order-status {
            font-weight: bold;
            font-size: 1.2rem;
        }

        .order-status.pending {
            color: orange;
        }

        .order-status.shipped {
            color: blue;
        }

        .order-status.delivered {
            color: green;
        }

        .order-status.cancelled {
            color: red;
        }

        .table th, .table td {
            vertical-align: middle;
        }

        .btn-danger, .btn-warning {
            margin-right: 10px;
        }

        .btn-sm {
            padding: 5px 10px;
        }

        .product-image {
            max-width: 80px;
            max-height: 80px;
            object-fit: cover;
        }
    </style>
</head>

<body>
    <%- include('../partials/user/header') %>

    <div class="container breadcrumb-container">
        <!-- Breadcrumbs -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/order">Orders</a></li>
                <li class="breadcrumb-item active" aria-current="page">Order Details</li>
            </ol>
        </nav>
    </div>
    <div class="container order-details-container">
        <div class="order-details-header">
            <h3>Order Details</h3>
        </div>
        <div class="order-details-body">
            <p>Order Id: <strong><%= order.orderId %></strong></p>
            <p>Date: <strong><%= order.orderDate.toDateString() %></strong></p>
            <p>Total: <strong>₹<%= order.totalAmount.toFixed(2) %></strong></p>
            <p>Payment Method: <strong><%= order.paymentMethod %></strong></p>

            <h4 class="order-status <%= order.status.toLowerCase().replace(/ /g, '-') %>">Order Status: <%= order.status %></h4>
            <h4 class="order-status <%= order.paymentStatus.toLowerCase().replace(/ /g, '-') %>">Payment Status: <%= order.paymentStatus %></h4>
 
            <h4>Order Details</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Total Returns/Cancel</th>

                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% order.products.forEach(product => { %>
                        <% if (product.productId) { %>
                            <tr>
                                <td>
                                    <% if (product.productId.productImages && product.productId.productImages.length > 0) { %>
                                        <a href="/product-details/<%= product.productId._id %>">
                                            <img src="/<%= product.productId.productImages[0] %>" alt="<%= product.productId.productName %>" class="product-image">
                                        </a>
                                    <% } %>
                                </td>
                                <td>
                                    <a style="text-decoration: none;" href="/product-details/<%= product.productId._id %>">
                                        <%= product.productId.productName %>
                                    </a>
                                </td>
                                <td>₹<%= product.productId.salePrice.toFixed(2) %></td>
                                <td><%= product.quantity %></td>
                                <td>₹<%= (product.productId.salePrice * product.quantity).toFixed(2) %></td>
                                <td>
                                    <% 
                                    // Find the return request for the specific product
                                    const returnRequest = order.returnRequest.find(req => req.productId.toString() === product.productId._id.toString());
                                    const totalReturnedQuantity = returnRequest ? returnRequest.quantity : 0; // Get the returned quantity or 0 if not found
                                    %>
                                    <%= totalReturnedQuantity %>
                                </td>
                                
                                <td>
                                    <% if (order.status === 'Delivered') { %>
                                        <% 
                                        // Check total quantity returned
                                        const returnRequest = order.products.find(req => req.productId.toString() === product.productId._id.toString());
                                        const totalReturnedQuantity = returnRequest ? returnRequest.quantity : 0;
                                        const isFullyReturned = totalReturnedQuantity >= product.quantity; // Check if fully returned
                                        %>
                                        <% if (isFullyReturned) { %>
                                            <span class="text-success">Returned</span>
                                        <% } else { %>
                                            <!-- Return Button -->
                                            <form action="/order/<%= order._id %>/<%= product.productId._id %>/return" method="POST" id="returnOrderForm-<%= product._id %>" class="form-inline" style="display:inline;">
                                                <button type="submit" class="btn btn-warning btn-sm" onclick="return confirmProductReturn('<%= product._id %>', '<%= product.quantity %>')">Return</button>
                                            </form>
                                        <% } %>
                                    <% } %>
                                    
                                    <% if (order.status === 'Pending' || order.status === 'Shipped') { %>
                                        <% 
                                        // Check total quantity canceled
                                        const cancelRequest = order.returnRequest.find(req => req.productId.toString() === product.productId._id.toString());
                                        const totalCanceledQuantity = cancelRequest ? cancelRequest.quantity : 0;
                                        const isCanceled = 0 >= product.quantity; // Check if fully canceled
                                        %>
                                        <% if (isCanceled) { %>
                                            <span class="text-danger">Cancelled</span>
                                        <% } else { %>
                                            <!-- Cancel Button -->
                                            <form action="/order/<%= order._id %>/<%= product.productId._id %>/cancel" method="POST" id="returnOrderForm-<%= product._id %>" class="form-inline" style="display:inline;">
                                                <input type="number" name="quantity" id="cancel-quantity-<%= product._id %>" min="1" max="<%= product.quantity %>" value="1" style="width: 60px; margin-right: 5px;">
                                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirmProductCancel('<%= product._id %>')">Cancel</button>
                                            </form>
                                        <% } %>
                                    <% } %>
                                </td>
                            </tr>
                        <% } %>
                    <% }) %>
                </tbody>
                
                
            </table>
            <% if (order.status === 'Pending' || order.status === 'Shipped' ) { %>
                <form id="cancelOrderForm-<%= order._id %>" action="/order/<%= order._id %>/cancel" method="POST" style="display:inline;">
                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirmCancel('<%= order._id %>')">Cancel All</button>
                </form>
            <% } else if (order.status === 'Delivered') { %>
                <form id="returnOrderForm-<%= order._id %>" action="/order/return/<%= order._id %>" method="POST" style="display:inline;">
                    <input type="hidden" name="reason" id="reason-<%= order._id %>">
                    <button type="submit" class="btn btn-warning btn-sm" onclick="confirmReturn('<%= order._id %>')">Return All</button>
                </form>
            <% } %>
            <% if (order.paymentStatus === 'Payment Pending') { %>
                <button id="retryPaymentButton" class="btn btn-primary btn-sm">Retry Payment</button>
            <% } %>
            <% if (order.status === 'Delivered') { %>
                <a href="/download-Invoice/<%= order.orderId %>" class="btn btn-success">Download invoice</a>
            <% } %>

        </div>
    </div>

    <%- include('../partials/user/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function confirmReturn(orderId) {
            event.preventDefault();
            Swal.fire({
                title: 'Are you sure you want to return this order?',
                text: "Please provide a reason for the return:",
                input: 'text',
                inputPlaceholder: 'Enter return reason...',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#f39c12',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, return it!',
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to provide a reason for returning the order!';
                    }
                }
            }).then((result) => {
                if (result.isConfirmed && result.value) {
                    document.getElementById(`reason-${orderId}`).value = result.value;
                    document.getElementById(`returnOrderForm-${orderId}`).submit();
                }
            });
        }

        function confirmCancel(orderId) {
            event.preventDefault();
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById(`cancelOrderForm-${orderId}`).submit();
                }
            });
        }


        function confirmProductReturn(productId, maxQuantity) {
            event.preventDefault();
            Swal.fire({
                title: 'Are you sure you want to return this product?',
                text: "Please select the quantity and provide a reason.",
                html: `
                    <label for="returnQuantity">Quantity:</label>
                    <input type="number" id="returnQuantity" name="returnQuantity" min="1" max="${maxQuantity}" value="1" style="width: 60px; margin-bottom: 10px;">
                    <label for="returnReason">Reason for return:</label>
                    <textarea id="returnReason" name="returnReason" placeholder="Enter your reason" rows="3" style="width: 100%;"></textarea>
                `,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#f39c12',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, return it!',
                preConfirm: () => {
                    const quantity = document.getElementById('returnQuantity').value;
                    const reason = document.getElementById('returnReason').value;
    
                    if (!reason) {
                        Swal.showValidationMessage('Please provide a reason for the return');
                    } else {
                        return { quantity, reason };
                    }
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    const form = document.getElementById(`returnOrderForm-${productId}`);
                    const quantityInput = document.createElement('input');
                    quantityInput.type = 'hidden';
                    quantityInput.name = 'quantity';
                    quantityInput.value = result.value.quantity;
    
                    const reasonInput = document.createElement('input');
                    reasonInput.type = 'hidden';
                    reasonInput.name = 'reason';
                    reasonInput.value = result.value.reason;
    
                    form.appendChild(quantityInput);
                    form.appendChild(reasonInput);
                    form.submit();
                }
            });
        }
    

        document.getElementById('retryPaymentButton')?.addEventListener('click', async function() {
            const orderId = '<%= order._id %>';

            try {
                const response = await fetch(`/order/${orderId}/retry-payment`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                const data = await response.json();

                if (!data.success) {
                    throw new Error(data.message || 'Failed to retry payment');
                }

                const options = {
                    key: data.key,
                    amount: data.amount,
                    currency: data.currency,
                    name: 'shoesea',
                    description: 'Order Payment',
                    order_id: data.order_id,
                    handler: async function(response) {
                        const verifyResponse = await fetch(`/order/${orderId}/verify-razorpay-payment`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature
                            })
                        });
                        const verifyData = await verifyResponse.json();

                        if (verifyData.success) {
                            window.location.href = `/order-success?orderId=${orderId}`;
                        } else {
                            alert('Payment verification failed: ' + verifyData.message);
                            window.location.href = `/payment-failed?orderId=${orderId}`;
                        }
                    },
                    modal: {
                        ondismiss: function() {
                            console.log('Payment modal closed');
                        }
                    },
                    prefill: {
                        name: 'Customer Name',
                        email: 'customer@example.com',
                        contact: '9999999999'
                    },
                    theme: {
                        color: '#F37254'
                    }
                };

                const paymentObject = new Razorpay(options);
                paymentObject.open();
            } catch (error) {
                console.error('Error retrying payment:', error);
                alert('Failed to retry payment: ' + error.message);
            }
        });

    </script>
    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="/js/custom.js"></script>
</body>

</html>
